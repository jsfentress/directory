---
import '../styles/global.css';
import NavDrawer from '../components/NavDrawer.jsx';
---
<html lang="en">
  <head>
    <title>Submit an Event | Nashville Music Radar</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>
  <body class="bg-gray-50 min-h-screen">
    <!-- Top nav bar -->
    <nav class="fixed top-0 left-0 w-full bg-white border-b border-gray-200 z-50">
      <div class="max-w-2xl mx-auto flex items-center gap-2 px-4 py-3 justify-between">
        <div class="flex items-center">
          <NavDrawer client:load />
        </div>
        <a href="/submit" class="ml-2 px-3 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition text-base font-semibold">Submit an Event</a>
      </div>
    </nav>
    <main class="flex flex-col items-center justify-start min-h-screen pt-24 px-2">
      <h1 class="text-3xl font-bold mb-8 text-center">Submit Your Event</h1>
      <div class="relative w-full max-w-md">
        <img src="/doodles.png" alt="doodle background" class="absolute inset-0 w-full h-full object-cover opacity-100 pointer-events-none select-none" style="z-index:1;" />
        <form id="event-form" class="relative w-full bg-white/80 p-4 sm:p-8 rounded-lg shadow flex flex-col gap-5" style="z-index:2;">
          <label for="title" class="text-base font-medium">Event Title</label>
          <input type="text" id="title" name="title" placeholder="Event title" required class="w-full px-4 py-4 text-lg rounded border border-gray-300" />
          <label for="venue" class="text-base font-medium">Venue</label>
          <input type="text" id="venue" name="venue" placeholder="Venue" required class="w-full px-4 py-4 text-lg rounded border border-gray-300" />
          <label for="date" class="text-base font-medium">Date</label>
          <input type="date" id="date" name="date" required class="w-full h-12 px-4 text-lg rounded border border-gray-300" />
          <label for="price" class="text-base font-medium">Price</label>
          <input type="text" id="price" name="price" placeholder="Price (e.g. $10, Free)" class="w-full px-4 py-4 text-lg rounded border border-gray-300" />
          <label class="text-base font-medium">Genres</label>
          <div id="genre-tags" class="flex flex-wrap gap-2 mb-2">
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Acoustic">Acoustic</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Indie">Indie</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Rock">Rock</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Jazz">Jazz</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Experimental">Experimental</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Hip Hop">Hip Hop</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Pop">Pop</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Country">Country</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Electronic">Electronic</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Folk">Folk</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Blues">Blues</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="R&B">R&B</button>
            <button type="button" class="tag-btn border border-indigo-300 rounded px-3 py-1 text-indigo-700 bg-gray-100 hover:bg-indigo-100 text-sm transition" data-genre="Metal">Metal</button>
          </div>
          <input type="hidden" name="genre" id="genre-hidden" />
          <button type="submit" class="w-full px-4 py-4 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition text-lg font-semibold">Submit Event</button>
        </form>
        <script type="module">
          const form = document.getElementById('event-form');
          // Genre tag logic
          const tagButtons = document.querySelectorAll('#genre-tags .tag-btn');
          const hiddenInput = document.getElementById('genre-hidden');
          let selectedGenres = [];
          tagButtons.forEach(btn => {
            btn.addEventListener('click', () => {
              const genre = btn.getAttribute('data-genre');
              if (selectedGenres.includes(genre)) {
                selectedGenres = selectedGenres.filter(g => g !== genre);
                btn.classList.remove('bg-indigo-700', 'text-white', 'border-indigo-700');
                btn.classList.add('bg-white', 'text-indigo-700', 'border-indigo-300');
              } else {
                selectedGenres.push(genre);
                btn.classList.add('bg-indigo-700', 'text-white', 'border-indigo-700');
                btn.classList.remove('bg-white', 'text-indigo-700', 'border-indigo-300');
              }
              hiddenInput.value = JSON.stringify(selectedGenres);
            });
          });
          form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const data = Object.fromEntries(new FormData(form));
            data.genre = data.genre ? JSON.parse(data.genre) : [];
            try {
              const res = await fetch('/api/submit-event', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data),
              });
              const result = await res.json();
              if (result.success) {
                window.location.href = '/thank-you';
              } else {
                alert(result.error || 'Submission failed.');
              }
            } catch (err) {
              alert('Submission failed.');
            }
          });
        </script>
      </div>
    </main>
  </body>
</html> 